version: "3.5"
services:
  nats:
    image: nats:2.10.16
    ports:
      - "8222:8222"
      - "4222:4222"
    command: "--config /etc/nats/nats-server.conf --name nats --cluster_name NATS --cluster nats://0.0.0.0:6222 --http_port 8222"
    networks: ["nats"]
    volumes:
      - "./nats-server.conf:/etc/nats/nats-server.conf"

  nats-1:
    image: nats:2.10.16
    command: "--config /etc/nats/nats-server.conf --name nats-1 --cluster_name NATS --cluster nats://0.0.0.0:6222 --routes=nats://ruser:T0pS3cr3t@nats:6222"
    networks: ["nats"]
    depends_on: ["nats"]
    volumes:
      - "./nats-server.conf:/etc/nats/nats-server.conf"

  nats-2:
    image: nats:2.10.16
    command: "--config /etc/nats/nats-server.conf --name nats-2 --cluster_name NATS --cluster nats://0.0.0.0:6222 --routes=nats://ruser:T0pS3cr3t@nats:6222"
    networks: ["nats"]
    depends_on: ["nats"]
    volumes:
      - "./nats-server.conf:/etc/nats/nats-server.conf"

    # NATS dashboard instance running on the same private network.
  dashboard:
    image: mdawar/nats-dashboard
    environment:
      # The NATS monitoring server will be proxied on /proxy/* on the frontend.
      # See: config/Caddyfile for the reverse proxy configuration.
      REVERSE_PROXY_UPSTREAM: 'nats:8222'
    volumes:
      # Optional config file.
      - ./config.json:/srv/config.json
    ports:
      - target: 80
        published: 8000
        protocol: tcp
    depends_on: ["nats"]
    networks: ["nats"]
  web:
    image: sphqxe/nats-webui:latest
    ports:
      - "8080:80"
    networks: ["nats"]
  # https://github.com/nats-io/prometheus-nats-exporter?tab=readme-ov-file
  exporter: 
    ports:
      - "7777:7777"
    image: natsio/prometheus-nats-exporter:0.15.0
    command: "-varz -jsz=all http://nats:8222"
    networks: ["nats"]

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    restart: always
    networks: ["nats"]
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: always
    networks: ["nats"]

networks:
  nats:
    name: nats
