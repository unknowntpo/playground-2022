/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
    // Apply the shadowJar plugin to package all dependencies in one fat JAR
    id("com.github.johnrengelman.shadow") version "8.1.1"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

val flinkVersion = "1.18.0"

configurations {
    create("flinkProvided")
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // Flink dependencies - marked as "provided" since they're available in the Flink container
    "flinkProvided"("org.apache.flink:flink-streaming-java:${flinkVersion}")
    "flinkProvided"("org.apache.flink:flink-clients:${flinkVersion}")
    
    // Add File Connector for Flink
    "flinkProvided"("org.apache.flink:flink-connector-files:${flinkVersion}")
    
    // Also make them available at compile time
    compileOnly("org.apache.flink:flink-streaming-java:${flinkVersion}")
    compileOnly("org.apache.flink:flink-clients:${flinkVersion}")
    compileOnly("org.apache.flink:flink-connector-files:${flinkVersion}")
    
    // For testing in the local environment
    testImplementation("org.apache.flink:flink-streaming-java:${flinkVersion}")
    testImplementation("org.apache.flink:flink-clients:${flinkVersion}")
    testImplementation("org.apache.flink:flink-connector-files:${flinkVersion}")
    
    // Logging
    implementation("org.slf4j:slf4j-api:2.0.7")
    implementation("org.apache.logging.log4j:log4j-slf4j2-impl:2.20.0")
    
    // This dependency is used by the application.
    implementation(libs.guava)
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17) // Changing to Java 17 for better compatibility with Flink
    }
}

application {
    // Define the main class for the application.
    mainClass = "org.example.StreamingJob"
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.jar {
    manifest {
        attributes["Main-Class"] = "org.example.StreamingJob"
    }
}

tasks.shadowJar {
    configurations = listOf(project.configurations.runtimeClasspath.get(), project.configurations["flinkProvided"])
    archiveFileName.set("flink-example-${project.version}.jar")
    exclude("META-INF/*.SF", "META-INF/*.DSA", "META-INF/*.RSA")
}
