/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.14.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
    id("me.champeau.jmh") version "0.7.2"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // MyBatis
    implementation(libs.mybatis)
    
    // Caffeine Cache for MyBatis
    implementation(libs.mybatis.caffeine.cache)
    implementation(libs.caffeine)
    
    // MySQL Driver and Connection Pool
    implementation(libs.mysql.connector.java)
    implementation(libs.hikaricp)
    
    // JAX-RS with Jersey and Jetty
    implementation(libs.javax.jaxb.api)
    // Remove javax.ws.rs.api - Jersey 3.x provides Jakarta APIs
    implementation(libs.jersey.server)
    implementation(libs.jersey.container.jetty.http)
    implementation(libs.jersey.container.servlet)
    implementation(libs.jersey.media.json.jackson)
    implementation(libs.jersey.inject.hk2)
    implementation(libs.jetty.server)
    implementation(libs.jetty.servlet)
    
    // JMH for benchmarking
    implementation(libs.jmh.core)
    annotationProcessor(libs.jmh.generator.annprocess)
    
    // JMH dependencies for jmh source set
    jmhImplementation(libs.jmh.core)
    jmhAnnotationProcessor(libs.jmh.generator.annprocess)
    
    // Testing
    testImplementation(libs.junit.jupiter)
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation(libs.guava)
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = "org.example.App"
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
