<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.example.mapper.RoleMapperNonCached">

    <!-- No cache configuration for non-cached version -->

    <!-- Result Maps -->
    <resultMap id="BaseRoleResultMap" type="Role">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="description" property="description"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <resultMap id="RoleWithUsersResultMap" type="Role" extends="BaseRoleResultMap">
        <collection property="users" ofType="User">
            <id column="user_id" property="id"/>
            <result column="user_name" property="name"/>
            <result column="user_email" property="email"/>
            <result column="user_created_at" property="createdAt"/>
            <result column="user_updated_at" property="updatedAt"/>
        </collection>
    </resultMap>

    <!-- Select Statements - useCache="false" or omitted -->
    <select id="getRoleById" resultMap="BaseRoleResultMap" useCache="false">
        SELECT id, name, description, created_at, updated_at
        FROM roles
        WHERE id = #{id}
    </select>

    <select id="getRoleByIdWithUsers" resultMap="RoleWithUsersResultMap" useCache="false">
        SELECT 
            r.id, r.name, r.description, r.created_at, r.updated_at,
            u.id as user_id, u.name as user_name, u.email as user_email, 
            u.created_at as user_created_at, u.updated_at as user_updated_at
        FROM roles r
        LEFT JOIN user_roles ur ON r.id = ur.role_id
        LEFT JOIN users u ON ur.user_id = u.id
        WHERE r.id = #{id}
    </select>

</mapper>