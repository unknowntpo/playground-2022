/* 
This file is auto generated by pgx.

The ordering of items is not stable, it is driven by a dependency graph.
*/

-- src/lib.rs:6
-- exploring_aggregates::DemoSum
CREATE TYPE DemoSum;

-- src/lib.rs:6
-- exploring_aggregates::demosum_in
CREATE  FUNCTION "demosum_in"(
        "input" cstring /* core::option::Option<&core::ffi::c_str::CStr> */
) RETURNS DemoSum /* core::option::Option<exploring_aggregates::DemoSum> */
IMMUTABLE PARALLEL SAFE
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'demosum_in_wrapper';

-- src/lib.rs:6
-- exploring_aggregates::demosum_out
CREATE  FUNCTION "demosum_out"(
        "input" DemoSum /* exploring_aggregates::DemoSum */
) RETURNS cstring /* &core::ffi::c_str::CStr */
IMMUTABLE STRICT PARALLEL SAFE
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'demosum_out_wrapper';

-- src/lib.rs:6
-- exploring_aggregates::DemoSum
CREATE TYPE DemoSum (
        INTERNALLENGTH = variable,
        INPUT = demosum_in, /* exploring_aggregates::demosum_in */
        OUTPUT = demosum_out, /* exploring_aggregates::demosum_out */
        STORAGE = extended
);

-- src/lib.rs:11
-- exploring_aggregates::demo_sum_state
CREATE  FUNCTION "demo_sum_state"(
        "this" DemoSum, /* exploring_aggregates::DemoSum */
        "arg_one" INT /* i32 */
) RETURNS DemoSum /* exploring_aggregates::DemoSum */
STRICT
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'demo_sum_state_wrapper';

-- src/lib.rs:11
-- exploring_aggregates::DemoSum
CREATE AGGREGATE DemoSum (
        INT /* i32 */
)
(
        SFUNC = "demo_sum_state", /* exploring_aggregates::DemoSum::state */
        STYPE = DemoSum, /* exploring_aggregates::DemoSum */
        INITCOND = '{ "count": 0 }' /* exploring_aggregates::DemoSum::INITIAL_CONDITION */
);